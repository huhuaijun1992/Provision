plugins {
    id 'com.android.application'
}

android {
    namespace 'com.custom.provision'
    compileSdk 34

    defaultConfig {
        applicationId "com.custom.provision"
        minSdk 29
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        debug  {
            storeFile file("$rootDir${File.separator}platform.keystore")
            storePassword 'android'
            keyAlias 'platform'
            keyPassword 'android'
            v1SigningEnabled true
            v2SigningEnabled true
        }
        release {
            storeFile file("$rootDir${File.separator}platform.keystore")
            storePassword 'android'
            keyAlias 'platform'
            keyPassword 'android'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures{
        viewBinding = true
    }

    applicationVariants.all { variant ->

        variant.outputs.all {
            if (variant.buildType.name == 'release') {
                getPackageApplication().outputDirectory = new File(project.rootDir.absolutePath + File.separator + "release")
                outputFileName = "Provison.apk"
            }
        }
    }
    tasks.whenTaskAdded { task ->
        if (task.name.contains("ReleaseApkListingFileRedirect")) { // 过滤release
            task.enabled = false
        }
    }


}
gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs.add("-Xbootclasspath/p:${rootDir}/app/libs/framework.jar")
    }
}


dependencies {

    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'com.google.android.material:material:1.12.0'
    compileOnly files('libs/framework.jar')
    implementation 'com.blankj:utilcodex:1.31.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.7.0'
}